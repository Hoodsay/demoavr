
EEPROM_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000664  000006f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000664  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800106  00800106  000006fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000730  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ec6  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d8  00000000  00000000  000016d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005fc  00000000  00000000  000020ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  000026ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c3  00000000  00000000  00002838  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000615  00000000  00000000  00002cfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003310  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a6 e0       	ldi	r26, 0x06	; 6
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a1 31       	cpi	r26, 0x11	; 17
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e4 e6       	ldi	r30, 0x64	; 100
  b0:	f6 e0       	ldi	r31, 0x06	; 6
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a6 30       	cpi	r26, 0x06	; 6
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>
  c2:	69 d0       	rcall	.+210    	; 0x196 <main>
  c4:	cd c2       	rjmp	.+1434   	; 0x660 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <EEPROM_read>:
	
	wchar_t n;
	for (n = 0; str1[n] != '\0'; ++n) {
		EEPROM_write(uiAddress + n, str1[n]);
	}
}
  c8:	e1 99       	sbic	0x1c, 1	; 28
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <EEPROM_read>
  cc:	9f bb       	out	0x1f, r25	; 31
  ce:	8e bb       	out	0x1e, r24	; 30
  d0:	e0 9a       	sbi	0x1c, 0	; 28
  d2:	8d b3       	in	r24, 0x1d	; 29
  d4:	08 95       	ret

000000d6 <EEPROM_read_word>:
  d6:	0f 93       	push	r16
  d8:	1f 93       	push	r17
  da:	cf 93       	push	r28
  dc:	df 93       	push	r29
  de:	8c 01       	movw	r16, r24
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	f2 df       	rcall	.-28     	; 0xc8 <EEPROM_read>
  e4:	c8 2f       	mov	r28, r24
  e6:	d0 e0       	ldi	r29, 0x00	; 0
  e8:	dc 2f       	mov	r29, r28
  ea:	cc 27       	eor	r28, r28
  ec:	00 00       	nop
  ee:	c8 01       	movw	r24, r16
  f0:	eb df       	rcall	.-42     	; 0xc8 <EEPROM_read>
  f2:	9e 01       	movw	r18, r28
  f4:	28 0f       	add	r18, r24
  f6:	31 1d       	adc	r19, r1
  f8:	c9 01       	movw	r24, r18
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	1f 91       	pop	r17
 100:	0f 91       	pop	r16
 102:	08 95       	ret

00000104 <EEPROM_read_dword>:
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	ec 01       	movw	r28, r24
 112:	02 96       	adiw	r24, 0x02	; 2
 114:	e0 df       	rcall	.-64     	; 0xd6 <EEPROM_read_word>
 116:	6c 01       	movw	r12, r24
 118:	e1 2c       	mov	r14, r1
 11a:	f1 2c       	mov	r15, r1
 11c:	76 01       	movw	r14, r12
 11e:	dd 24       	eor	r13, r13
 120:	cc 24       	eor	r12, r12
 122:	00 00       	nop
 124:	ce 01       	movw	r24, r28
 126:	d7 df       	rcall	.-82     	; 0xd6 <EEPROM_read_word>
 128:	a7 01       	movw	r20, r14
 12a:	96 01       	movw	r18, r12
 12c:	28 0f       	add	r18, r24
 12e:	39 1f       	adc	r19, r25
 130:	41 1d       	adc	r20, r1
 132:	51 1d       	adc	r21, r1
 134:	ca 01       	movw	r24, r20
 136:	b9 01       	movw	r22, r18
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	ff 90       	pop	r15
 13e:	ef 90       	pop	r14
 140:	df 90       	pop	r13
 142:	cf 90       	pop	r12
 144:	08 95       	ret

00000146 <EEPROM_read_string>:

const char *EEPROM_read_string(unsigned int uiAddress, unsigned int sz) {
 146:	cf 92       	push	r12
 148:	df 92       	push	r13
 14a:	ef 92       	push	r14
 14c:	ff 92       	push	r15
 14e:	0f 93       	push	r16
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	7c 01       	movw	r14, r24
 158:	8b 01       	movw	r16, r22
	
	unsigned int i;
	char *str1;
	
	str1 = (char *)realloc(NULL, sz);
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	76 d0       	rcall	.+236    	; 0x24c <realloc>
 160:	6c 01       	movw	r12, r24
	for (i = 0; i < sz; ++i) {
 162:	01 15       	cp	r16, r1
 164:	11 05       	cpc	r17, r1
 166:	69 f0       	breq	.+26     	; 0x182 <EEPROM_read_string+0x3c>
 168:	08 0f       	add	r16, r24
 16a:	19 1f       	adc	r17, r25
 16c:	ec 01       	movw	r28, r24
		str1[i] = EEPROM_read(uiAddress + i);
 16e:	e8 1a       	sub	r14, r24
 170:	f9 0a       	sbc	r15, r25
 172:	c7 01       	movw	r24, r14
 174:	8c 0f       	add	r24, r28
 176:	9d 1f       	adc	r25, r29
 178:	a7 df       	rcall	.-178    	; 0xc8 <EEPROM_read>
 17a:	89 93       	st	Y+, r24
	
	unsigned int i;
	char *str1;
	
	str1 = (char *)realloc(NULL, sz);
	for (i = 0; i < sz; ++i) {
 17c:	c0 17       	cp	r28, r16
 17e:	d1 07       	cpc	r29, r17
 180:	c1 f7       	brne	.-16     	; 0x172 <EEPROM_read_string+0x2c>
		str1[i] = EEPROM_read(uiAddress + i);
	}
	
	return str1;
 182:	c6 01       	movw	r24, r12
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	1f 91       	pop	r17
 18a:	0f 91       	pop	r16
 18c:	ff 90       	pop	r15
 18e:	ef 90       	pop	r14
 190:	df 90       	pop	r13
 192:	cf 90       	pop	r12
 194:	08 95       	ret

00000196 <main>:
uint16_t dt16;
uint32_t dt32;

int main(void) {
	
	USART_Init(8);
 196:	88 e0       	ldi	r24, 0x08	; 8
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	48 d0       	rcall	.+144    	; 0x22c <USART_Init>
	asm("nop");
 19c:	00 00       	nop
	
	dt = EEPROM_read(1);
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	92 df       	rcall	.-220    	; 0xc8 <EEPROM_read>
 1a4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <dt>
	USART_Transmit(dt);
	USART_Transmit(0x0d);
 1a8:	4d d0       	rcall	.+154    	; 0x244 <USART_Transmit>
 1aa:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Transmit(0x0a);
 1ac:	4b d0       	rcall	.+150    	; 0x244 <USART_Transmit>
 1ae:	8a e0       	ldi	r24, 0x0A	; 10
	
	dt16 = EEPROM_read_word(3);
 1b0:	49 d0       	rcall	.+146    	; 0x244 <USART_Transmit>
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	8f df       	rcall	.-226    	; 0xd6 <EEPROM_read_word>
 1b8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <dt16>
	USART_Transmit((unsigned char) (dt16 >> 8));
 1bc:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <dt16+0x1>
	USART_Transmit((unsigned char) dt16);
 1c0:	89 2f       	mov	r24, r25
 1c2:	40 d0       	rcall	.+128    	; 0x244 <USART_Transmit>
 1c4:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <dt16>
	USART_Transmit(0x0d);
 1c8:	3d d0       	rcall	.+122    	; 0x244 <USART_Transmit>
 1ca:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Transmit(0x0a);
 1cc:	3b d0       	rcall	.+118    	; 0x244 <USART_Transmit>
 1ce:	8a e0       	ldi	r24, 0x0A	; 10
 1d0:	39 d0       	rcall	.+114    	; 0x244 <USART_Transmit>
	
	dt32 = EEPROM_read_dword(7);
 1d2:	87 e0       	ldi	r24, 0x07	; 7
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	96 df       	rcall	.-212    	; 0x104 <EEPROM_read_dword>
 1d8:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <__data_end>
 1dc:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <__data_end+0x1>
 1e0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end+0x2>
	USART_Transmit((unsigned char) (dt32 >> 24));
 1e4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x3>
	USART_Transmit((unsigned char) (dt32 >> 16));
 1e8:	89 2f       	mov	r24, r25
 1ea:	2c d0       	rcall	.+88     	; 0x244 <USART_Transmit>
 1ec:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end+0x2>
	USART_Transmit((unsigned char) (dt32 >> 8));
 1f0:	29 d0       	rcall	.+82     	; 0x244 <USART_Transmit>
 1f2:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__data_end+0x1>
	USART_Transmit((unsigned char) dt32);
 1f6:	26 d0       	rcall	.+76     	; 0x244 <USART_Transmit>
 1f8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
	USART_Transmit(0x0d);
 1fc:	23 d0       	rcall	.+70     	; 0x244 <USART_Transmit>
 1fe:	8d e0       	ldi	r24, 0x0D	; 13
	USART_Transmit(0x0a);
 200:	21 d0       	rcall	.+66     	; 0x244 <USART_Transmit>
 202:	8a e0       	ldi	r24, 0x0A	; 10
	
	const char *buff = EEPROM_read_string(16, 13);
 204:	1f d0       	rcall	.+62     	; 0x244 <USART_Transmit>
 206:	6d e0       	ldi	r22, 0x0D	; 13
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	80 e1       	ldi	r24, 0x10	; 16
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	9b df       	rcall	.-202    	; 0x146 <EEPROM_read_string>
 210:	ec 01       	movw	r28, r24
 212:	8c 01       	movw	r16, r24
 214:	03 5f       	subi	r16, 0xF3	; 243
	for (int i = 0; i < 13; ++i) {
		USART_Transmit(buff[i]);
 216:	1f 4f       	sbci	r17, 0xFF	; 255
 218:	89 91       	ld	r24, Y+
 21a:	14 d0       	rcall	.+40     	; 0x244 <USART_Transmit>
	USART_Transmit((unsigned char) dt32);
	USART_Transmit(0x0d);
	USART_Transmit(0x0a);
	
	const char *buff = EEPROM_read_string(16, 13);
	for (int i = 0; i < 13; ++i) {
 21c:	c0 17       	cp	r28, r16
 21e:	d1 07       	cpc	r29, r17
 220:	d9 f7       	brne	.-10     	; 0x218 <main+0x82>
		USART_Transmit(buff[i]);
	}
	USART_Transmit(0x0d);
 222:	8d e0       	ldi	r24, 0x0D	; 13
 224:	0f d0       	rcall	.+30     	; 0x244 <USART_Transmit>
 226:	8a e0       	ldi	r24, 0x0A	; 10
	USART_Transmit(0x0a);
 228:	0d d0       	rcall	.+26     	; 0x244 <USART_Transmit>
 22a:	ff cf       	rjmp	.-2      	; 0x22a <main+0x94>

0000022c <USART_Init>:
#include "USART.h"

void USART_Init(unsigned int speed) {
	UBRR0H = (unsigned char) (speed >> 8);
 22c:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (unsigned char) speed;
 230:	89 b9       	out	0x09, r24	; 9
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
 232:	8a b1       	in	r24, 0x0a	; 10
 234:	88 61       	ori	r24, 0x18	; 24
 236:	8a b9       	out	0x0a, r24	; 10
	UCSR0B |= (1 << RXCIE0);
 238:	57 9a       	sbi	0x0a, 7	; 10
	UCSR0A |= (1 << U2X0);
 23a:	59 9a       	sbi	0x0b, 1	; 11
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
 23c:	8e e0       	ldi	r24, 0x0E	; 14
 23e:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 242:	08 95       	ret

00000244 <USART_Transmit>:
}

void USART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0)));
 244:	5d 9b       	sbis	0x0b, 5	; 11
 246:	fe cf       	rjmp	.-4      	; 0x244 <USART_Transmit>
	UDR0 = data;
 248:	8c b9       	out	0x0c, r24	; 12
 24a:	08 95       	ret

0000024c <realloc>:
 24c:	6f 92       	push	r6
 24e:	7f 92       	push	r7
 250:	8f 92       	push	r8
 252:	9f 92       	push	r9
 254:	af 92       	push	r10
 256:	bf 92       	push	r11
 258:	cf 92       	push	r12
 25a:	df 92       	push	r13
 25c:	ef 92       	push	r14
 25e:	ff 92       	push	r15
 260:	0f 93       	push	r16
 262:	1f 93       	push	r17
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	00 97       	sbiw	r24, 0x00	; 0
 26a:	81 f4       	brne	.+32     	; 0x28c <realloc+0x40>
 26c:	cb 01       	movw	r24, r22
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	1f 91       	pop	r17
 274:	0f 91       	pop	r16
 276:	ff 90       	pop	r15
 278:	ef 90       	pop	r14
 27a:	df 90       	pop	r13
 27c:	cf 90       	pop	r12
 27e:	bf 90       	pop	r11
 280:	af 90       	pop	r10
 282:	9f 90       	pop	r9
 284:	8f 90       	pop	r8
 286:	7f 90       	pop	r7
 288:	6f 90       	pop	r6
 28a:	c9 c0       	rjmp	.+402    	; 0x41e <malloc>
 28c:	fc 01       	movw	r30, r24
 28e:	e6 0f       	add	r30, r22
 290:	f7 1f       	adc	r31, r23
 292:	9c 01       	movw	r18, r24
 294:	22 50       	subi	r18, 0x02	; 2
 296:	31 09       	sbc	r19, r1
 298:	e2 17       	cp	r30, r18
 29a:	f3 07       	cpc	r31, r19
 29c:	08 f4       	brcc	.+2      	; 0x2a0 <realloc+0x54>
 29e:	a5 c0       	rjmp	.+330    	; 0x3ea <realloc+0x19e>
 2a0:	ec 01       	movw	r28, r24
 2a2:	d9 01       	movw	r26, r18
 2a4:	0d 91       	ld	r16, X+
 2a6:	1c 91       	ld	r17, X
 2a8:	11 97       	sbiw	r26, 0x01	; 1
 2aa:	06 17       	cp	r16, r22
 2ac:	17 07       	cpc	r17, r23
 2ae:	a8 f0       	brcs	.+42     	; 0x2da <realloc+0x8e>
 2b0:	05 30       	cpi	r16, 0x05	; 5
 2b2:	11 05       	cpc	r17, r1
 2b4:	08 f4       	brcc	.+2      	; 0x2b8 <realloc+0x6c>
 2b6:	97 c0       	rjmp	.+302    	; 0x3e6 <realloc+0x19a>
 2b8:	c8 01       	movw	r24, r16
 2ba:	04 97       	sbiw	r24, 0x04	; 4
 2bc:	86 17       	cp	r24, r22
 2be:	97 07       	cpc	r25, r23
 2c0:	08 f4       	brcc	.+2      	; 0x2c4 <realloc+0x78>
 2c2:	91 c0       	rjmp	.+290    	; 0x3e6 <realloc+0x19a>
 2c4:	02 50       	subi	r16, 0x02	; 2
 2c6:	11 09       	sbc	r17, r1
 2c8:	06 1b       	sub	r16, r22
 2ca:	17 0b       	sbc	r17, r23
 2cc:	01 93       	st	Z+, r16
 2ce:	11 93       	st	Z+, r17
 2d0:	6d 93       	st	X+, r22
 2d2:	7c 93       	st	X, r23
 2d4:	cf 01       	movw	r24, r30
 2d6:	3b d1       	rcall	.+630    	; 0x54e <free>
 2d8:	86 c0       	rjmp	.+268    	; 0x3e6 <realloc+0x19a>
 2da:	5b 01       	movw	r10, r22
 2dc:	a0 1a       	sub	r10, r16
 2de:	b1 0a       	sbc	r11, r17
 2e0:	4c 01       	movw	r8, r24
 2e2:	80 0e       	add	r8, r16
 2e4:	91 1e       	adc	r9, r17
 2e6:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <__flp>
 2ea:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <__flp+0x1>
 2ee:	61 2c       	mov	r6, r1
 2f0:	71 2c       	mov	r7, r1
 2f2:	e1 2c       	mov	r14, r1
 2f4:	f1 2c       	mov	r15, r1
 2f6:	10 97       	sbiw	r26, 0x00	; 0
 2f8:	09 f4       	brne	.+2      	; 0x2fc <realloc+0xb0>
 2fa:	46 c0       	rjmp	.+140    	; 0x388 <realloc+0x13c>
 2fc:	8d 91       	ld	r24, X+
 2fe:	9c 91       	ld	r25, X
 300:	11 97       	sbiw	r26, 0x01	; 1
 302:	a8 15       	cp	r26, r8
 304:	b9 05       	cpc	r27, r9
 306:	b1 f5       	brne	.+108    	; 0x374 <realloc+0x128>
 308:	6c 01       	movw	r12, r24
 30a:	42 e0       	ldi	r20, 0x02	; 2
 30c:	c4 0e       	add	r12, r20
 30e:	d1 1c       	adc	r13, r1
 310:	ca 14       	cp	r12, r10
 312:	db 04       	cpc	r13, r11
 314:	78 f1       	brcs	.+94     	; 0x374 <realloc+0x128>
 316:	4c 01       	movw	r8, r24
 318:	8a 18       	sub	r8, r10
 31a:	9b 08       	sbc	r9, r11
 31c:	64 01       	movw	r12, r8
 31e:	42 e0       	ldi	r20, 0x02	; 2
 320:	c4 0e       	add	r12, r20
 322:	d1 1c       	adc	r13, r1
 324:	12 96       	adiw	r26, 0x02	; 2
 326:	bc 90       	ld	r11, X
 328:	12 97       	sbiw	r26, 0x02	; 2
 32a:	13 96       	adiw	r26, 0x03	; 3
 32c:	ac 91       	ld	r26, X
 32e:	b5 e0       	ldi	r27, 0x05	; 5
 330:	cb 16       	cp	r12, r27
 332:	d1 04       	cpc	r13, r1
 334:	40 f0       	brcs	.+16     	; 0x346 <realloc+0xfa>
 336:	b2 82       	std	Z+2, r11	; 0x02
 338:	a3 83       	std	Z+3, r26	; 0x03
 33a:	91 82       	std	Z+1, r9	; 0x01
 33c:	80 82       	st	Z, r8
 33e:	d9 01       	movw	r26, r18
 340:	6d 93       	st	X+, r22
 342:	7c 93       	st	X, r23
 344:	09 c0       	rjmp	.+18     	; 0x358 <realloc+0x10c>
 346:	0e 5f       	subi	r16, 0xFE	; 254
 348:	1f 4f       	sbci	r17, 0xFF	; 255
 34a:	80 0f       	add	r24, r16
 34c:	91 1f       	adc	r25, r17
 34e:	f9 01       	movw	r30, r18
 350:	91 83       	std	Z+1, r25	; 0x01
 352:	80 83       	st	Z, r24
 354:	eb 2d       	mov	r30, r11
 356:	fa 2f       	mov	r31, r26
 358:	e1 14       	cp	r14, r1
 35a:	f1 04       	cpc	r15, r1
 35c:	31 f0       	breq	.+12     	; 0x36a <realloc+0x11e>
 35e:	d7 01       	movw	r26, r14
 360:	13 96       	adiw	r26, 0x03	; 3
 362:	fc 93       	st	X, r31
 364:	ee 93       	st	-X, r30
 366:	12 97       	sbiw	r26, 0x02	; 2
 368:	3e c0       	rjmp	.+124    	; 0x3e6 <realloc+0x19a>
 36a:	f0 93 10 01 	sts	0x0110, r31	; 0x800110 <__flp+0x1>
 36e:	e0 93 0f 01 	sts	0x010F, r30	; 0x80010f <__flp>
 372:	39 c0       	rjmp	.+114    	; 0x3e6 <realloc+0x19a>
 374:	68 16       	cp	r6, r24
 376:	79 06       	cpc	r7, r25
 378:	08 f4       	brcc	.+2      	; 0x37c <realloc+0x130>
 37a:	3c 01       	movw	r6, r24
 37c:	7d 01       	movw	r14, r26
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	0d 90       	ld	r0, X+
 382:	bc 91       	ld	r27, X
 384:	a0 2d       	mov	r26, r0
 386:	b7 cf       	rjmp	.-146    	; 0x2f6 <realloc+0xaa>
 388:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <__brkval>
 38c:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <__brkval+0x1>
 390:	88 16       	cp	r8, r24
 392:	99 06       	cpc	r9, r25
 394:	e1 f4       	brne	.+56     	; 0x3ce <realloc+0x182>
 396:	66 16       	cp	r6, r22
 398:	77 06       	cpc	r7, r23
 39a:	c8 f4       	brcc	.+50     	; 0x3ce <realloc+0x182>
 39c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3a0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 3a4:	00 97       	sbiw	r24, 0x00	; 0
 3a6:	41 f4       	brne	.+16     	; 0x3b8 <realloc+0x16c>
 3a8:	8d b7       	in	r24, 0x3d	; 61
 3aa:	9e b7       	in	r25, 0x3e	; 62
 3ac:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 3b0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 3b4:	84 1b       	sub	r24, r20
 3b6:	95 0b       	sbc	r25, r21
 3b8:	e8 17       	cp	r30, r24
 3ba:	f9 07       	cpc	r31, r25
 3bc:	b0 f4       	brcc	.+44     	; 0x3ea <realloc+0x19e>
 3be:	f0 93 0e 01 	sts	0x010E, r31	; 0x80010e <__brkval+0x1>
 3c2:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <__brkval>
 3c6:	f9 01       	movw	r30, r18
 3c8:	71 83       	std	Z+1, r23	; 0x01
 3ca:	60 83       	st	Z, r22
 3cc:	0c c0       	rjmp	.+24     	; 0x3e6 <realloc+0x19a>
 3ce:	cb 01       	movw	r24, r22
 3d0:	26 d0       	rcall	.+76     	; 0x41e <malloc>
 3d2:	7c 01       	movw	r14, r24
 3d4:	00 97       	sbiw	r24, 0x00	; 0
 3d6:	49 f0       	breq	.+18     	; 0x3ea <realloc+0x19e>
 3d8:	a8 01       	movw	r20, r16
 3da:	be 01       	movw	r22, r28
 3dc:	17 d0       	rcall	.+46     	; 0x40c <memcpy>
 3de:	ce 01       	movw	r24, r28
 3e0:	b6 d0       	rcall	.+364    	; 0x54e <free>
 3e2:	c7 01       	movw	r24, r14
 3e4:	04 c0       	rjmp	.+8      	; 0x3ee <realloc+0x1a2>
 3e6:	ce 01       	movw	r24, r28
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <realloc+0x1a2>
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	1f 91       	pop	r17
 3f4:	0f 91       	pop	r16
 3f6:	ff 90       	pop	r15
 3f8:	ef 90       	pop	r14
 3fa:	df 90       	pop	r13
 3fc:	cf 90       	pop	r12
 3fe:	bf 90       	pop	r11
 400:	af 90       	pop	r10
 402:	9f 90       	pop	r9
 404:	8f 90       	pop	r8
 406:	7f 90       	pop	r7
 408:	6f 90       	pop	r6
 40a:	08 95       	ret

0000040c <memcpy>:
 40c:	fb 01       	movw	r30, r22
 40e:	dc 01       	movw	r26, r24
 410:	02 c0       	rjmp	.+4      	; 0x416 <memcpy+0xa>
 412:	01 90       	ld	r0, Z+
 414:	0d 92       	st	X+, r0
 416:	41 50       	subi	r20, 0x01	; 1
 418:	50 40       	sbci	r21, 0x00	; 0
 41a:	d8 f7       	brcc	.-10     	; 0x412 <memcpy+0x6>
 41c:	08 95       	ret

0000041e <malloc>:
 41e:	0f 93       	push	r16
 420:	1f 93       	push	r17
 422:	cf 93       	push	r28
 424:	df 93       	push	r29
 426:	82 30       	cpi	r24, 0x02	; 2
 428:	91 05       	cpc	r25, r1
 42a:	10 f4       	brcc	.+4      	; 0x430 <malloc+0x12>
 42c:	82 e0       	ldi	r24, 0x02	; 2
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <__flp>
 434:	f0 91 10 01 	lds	r31, 0x0110	; 0x800110 <__flp+0x1>
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	a0 e0       	ldi	r26, 0x00	; 0
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	30 97       	sbiw	r30, 0x00	; 0
 442:	19 f1       	breq	.+70     	; 0x48a <malloc+0x6c>
 444:	40 81       	ld	r20, Z
 446:	51 81       	ldd	r21, Z+1	; 0x01
 448:	02 81       	ldd	r16, Z+2	; 0x02
 44a:	13 81       	ldd	r17, Z+3	; 0x03
 44c:	48 17       	cp	r20, r24
 44e:	59 07       	cpc	r21, r25
 450:	c8 f0       	brcs	.+50     	; 0x484 <malloc+0x66>
 452:	84 17       	cp	r24, r20
 454:	95 07       	cpc	r25, r21
 456:	69 f4       	brne	.+26     	; 0x472 <malloc+0x54>
 458:	10 97       	sbiw	r26, 0x00	; 0
 45a:	31 f0       	breq	.+12     	; 0x468 <malloc+0x4a>
 45c:	12 96       	adiw	r26, 0x02	; 2
 45e:	0c 93       	st	X, r16
 460:	12 97       	sbiw	r26, 0x02	; 2
 462:	13 96       	adiw	r26, 0x03	; 3
 464:	1c 93       	st	X, r17
 466:	27 c0       	rjmp	.+78     	; 0x4b6 <malloc+0x98>
 468:	00 93 0f 01 	sts	0x010F, r16	; 0x80010f <__flp>
 46c:	10 93 10 01 	sts	0x0110, r17	; 0x800110 <__flp+0x1>
 470:	22 c0       	rjmp	.+68     	; 0x4b6 <malloc+0x98>
 472:	21 15       	cp	r18, r1
 474:	31 05       	cpc	r19, r1
 476:	19 f0       	breq	.+6      	; 0x47e <malloc+0x60>
 478:	42 17       	cp	r20, r18
 47a:	53 07       	cpc	r21, r19
 47c:	18 f4       	brcc	.+6      	; 0x484 <malloc+0x66>
 47e:	9a 01       	movw	r18, r20
 480:	bd 01       	movw	r22, r26
 482:	ef 01       	movw	r28, r30
 484:	df 01       	movw	r26, r30
 486:	f8 01       	movw	r30, r16
 488:	db cf       	rjmp	.-74     	; 0x440 <malloc+0x22>
 48a:	21 15       	cp	r18, r1
 48c:	31 05       	cpc	r19, r1
 48e:	f9 f0       	breq	.+62     	; 0x4ce <malloc+0xb0>
 490:	28 1b       	sub	r18, r24
 492:	39 0b       	sbc	r19, r25
 494:	24 30       	cpi	r18, 0x04	; 4
 496:	31 05       	cpc	r19, r1
 498:	80 f4       	brcc	.+32     	; 0x4ba <malloc+0x9c>
 49a:	8a 81       	ldd	r24, Y+2	; 0x02
 49c:	9b 81       	ldd	r25, Y+3	; 0x03
 49e:	61 15       	cp	r22, r1
 4a0:	71 05       	cpc	r23, r1
 4a2:	21 f0       	breq	.+8      	; 0x4ac <malloc+0x8e>
 4a4:	fb 01       	movw	r30, r22
 4a6:	93 83       	std	Z+3, r25	; 0x03
 4a8:	82 83       	std	Z+2, r24	; 0x02
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <malloc+0x96>
 4ac:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <__flp+0x1>
 4b0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <__flp>
 4b4:	fe 01       	movw	r30, r28
 4b6:	32 96       	adiw	r30, 0x02	; 2
 4b8:	44 c0       	rjmp	.+136    	; 0x542 <malloc+0x124>
 4ba:	fe 01       	movw	r30, r28
 4bc:	e2 0f       	add	r30, r18
 4be:	f3 1f       	adc	r31, r19
 4c0:	81 93       	st	Z+, r24
 4c2:	91 93       	st	Z+, r25
 4c4:	22 50       	subi	r18, 0x02	; 2
 4c6:	31 09       	sbc	r19, r1
 4c8:	39 83       	std	Y+1, r19	; 0x01
 4ca:	28 83       	st	Y, r18
 4cc:	3a c0       	rjmp	.+116    	; 0x542 <malloc+0x124>
 4ce:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 4d2:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 4d6:	23 2b       	or	r18, r19
 4d8:	41 f4       	brne	.+16     	; 0x4ea <malloc+0xcc>
 4da:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 4de:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 4e2:	30 93 0e 01 	sts	0x010E, r19	; 0x80010e <__brkval+0x1>
 4e6:	20 93 0d 01 	sts	0x010D, r18	; 0x80010d <__brkval>
 4ea:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 4ee:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 4f2:	21 15       	cp	r18, r1
 4f4:	31 05       	cpc	r19, r1
 4f6:	41 f4       	brne	.+16     	; 0x508 <malloc+0xea>
 4f8:	2d b7       	in	r18, 0x3d	; 61
 4fa:	3e b7       	in	r19, 0x3e	; 62
 4fc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 500:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 504:	24 1b       	sub	r18, r20
 506:	35 0b       	sbc	r19, r21
 508:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <__brkval>
 50c:	f0 91 0e 01 	lds	r31, 0x010E	; 0x80010e <__brkval+0x1>
 510:	e2 17       	cp	r30, r18
 512:	f3 07       	cpc	r31, r19
 514:	a0 f4       	brcc	.+40     	; 0x53e <malloc+0x120>
 516:	2e 1b       	sub	r18, r30
 518:	3f 0b       	sbc	r19, r31
 51a:	28 17       	cp	r18, r24
 51c:	39 07       	cpc	r19, r25
 51e:	78 f0       	brcs	.+30     	; 0x53e <malloc+0x120>
 520:	ac 01       	movw	r20, r24
 522:	4e 5f       	subi	r20, 0xFE	; 254
 524:	5f 4f       	sbci	r21, 0xFF	; 255
 526:	24 17       	cp	r18, r20
 528:	35 07       	cpc	r19, r21
 52a:	48 f0       	brcs	.+18     	; 0x53e <malloc+0x120>
 52c:	4e 0f       	add	r20, r30
 52e:	5f 1f       	adc	r21, r31
 530:	50 93 0e 01 	sts	0x010E, r21	; 0x80010e <__brkval+0x1>
 534:	40 93 0d 01 	sts	0x010D, r20	; 0x80010d <__brkval>
 538:	81 93       	st	Z+, r24
 53a:	91 93       	st	Z+, r25
 53c:	02 c0       	rjmp	.+4      	; 0x542 <malloc+0x124>
 53e:	e0 e0       	ldi	r30, 0x00	; 0
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	cf 01       	movw	r24, r30
 544:	df 91       	pop	r29
 546:	cf 91       	pop	r28
 548:	1f 91       	pop	r17
 54a:	0f 91       	pop	r16
 54c:	08 95       	ret

0000054e <free>:
 54e:	cf 93       	push	r28
 550:	df 93       	push	r29
 552:	00 97       	sbiw	r24, 0x00	; 0
 554:	09 f4       	brne	.+2      	; 0x558 <free+0xa>
 556:	81 c0       	rjmp	.+258    	; 0x65a <free+0x10c>
 558:	fc 01       	movw	r30, r24
 55a:	32 97       	sbiw	r30, 0x02	; 2
 55c:	13 82       	std	Z+3, r1	; 0x03
 55e:	12 82       	std	Z+2, r1	; 0x02
 560:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <__flp>
 564:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <__flp+0x1>
 568:	10 97       	sbiw	r26, 0x00	; 0
 56a:	81 f4       	brne	.+32     	; 0x58c <free+0x3e>
 56c:	20 81       	ld	r18, Z
 56e:	31 81       	ldd	r19, Z+1	; 0x01
 570:	82 0f       	add	r24, r18
 572:	93 1f       	adc	r25, r19
 574:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 578:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 57c:	28 17       	cp	r18, r24
 57e:	39 07       	cpc	r19, r25
 580:	51 f5       	brne	.+84     	; 0x5d6 <free+0x88>
 582:	f0 93 0e 01 	sts	0x010E, r31	; 0x80010e <__brkval+0x1>
 586:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <__brkval>
 58a:	67 c0       	rjmp	.+206    	; 0x65a <free+0x10c>
 58c:	ed 01       	movw	r28, r26
 58e:	20 e0       	ldi	r18, 0x00	; 0
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	ce 17       	cp	r28, r30
 594:	df 07       	cpc	r29, r31
 596:	40 f4       	brcc	.+16     	; 0x5a8 <free+0x5a>
 598:	4a 81       	ldd	r20, Y+2	; 0x02
 59a:	5b 81       	ldd	r21, Y+3	; 0x03
 59c:	9e 01       	movw	r18, r28
 59e:	41 15       	cp	r20, r1
 5a0:	51 05       	cpc	r21, r1
 5a2:	f1 f0       	breq	.+60     	; 0x5e0 <free+0x92>
 5a4:	ea 01       	movw	r28, r20
 5a6:	f5 cf       	rjmp	.-22     	; 0x592 <free+0x44>
 5a8:	d3 83       	std	Z+3, r29	; 0x03
 5aa:	c2 83       	std	Z+2, r28	; 0x02
 5ac:	40 81       	ld	r20, Z
 5ae:	51 81       	ldd	r21, Z+1	; 0x01
 5b0:	84 0f       	add	r24, r20
 5b2:	95 1f       	adc	r25, r21
 5b4:	c8 17       	cp	r28, r24
 5b6:	d9 07       	cpc	r29, r25
 5b8:	59 f4       	brne	.+22     	; 0x5d0 <free+0x82>
 5ba:	88 81       	ld	r24, Y
 5bc:	99 81       	ldd	r25, Y+1	; 0x01
 5be:	84 0f       	add	r24, r20
 5c0:	95 1f       	adc	r25, r21
 5c2:	02 96       	adiw	r24, 0x02	; 2
 5c4:	91 83       	std	Z+1, r25	; 0x01
 5c6:	80 83       	st	Z, r24
 5c8:	8a 81       	ldd	r24, Y+2	; 0x02
 5ca:	9b 81       	ldd	r25, Y+3	; 0x03
 5cc:	93 83       	std	Z+3, r25	; 0x03
 5ce:	82 83       	std	Z+2, r24	; 0x02
 5d0:	21 15       	cp	r18, r1
 5d2:	31 05       	cpc	r19, r1
 5d4:	29 f4       	brne	.+10     	; 0x5e0 <free+0x92>
 5d6:	f0 93 10 01 	sts	0x0110, r31	; 0x800110 <__flp+0x1>
 5da:	e0 93 0f 01 	sts	0x010F, r30	; 0x80010f <__flp>
 5de:	3d c0       	rjmp	.+122    	; 0x65a <free+0x10c>
 5e0:	e9 01       	movw	r28, r18
 5e2:	fb 83       	std	Y+3, r31	; 0x03
 5e4:	ea 83       	std	Y+2, r30	; 0x02
 5e6:	49 91       	ld	r20, Y+
 5e8:	59 91       	ld	r21, Y+
 5ea:	c4 0f       	add	r28, r20
 5ec:	d5 1f       	adc	r29, r21
 5ee:	ec 17       	cp	r30, r28
 5f0:	fd 07       	cpc	r31, r29
 5f2:	61 f4       	brne	.+24     	; 0x60c <free+0xbe>
 5f4:	80 81       	ld	r24, Z
 5f6:	91 81       	ldd	r25, Z+1	; 0x01
 5f8:	84 0f       	add	r24, r20
 5fa:	95 1f       	adc	r25, r21
 5fc:	02 96       	adiw	r24, 0x02	; 2
 5fe:	e9 01       	movw	r28, r18
 600:	99 83       	std	Y+1, r25	; 0x01
 602:	88 83       	st	Y, r24
 604:	82 81       	ldd	r24, Z+2	; 0x02
 606:	93 81       	ldd	r25, Z+3	; 0x03
 608:	9b 83       	std	Y+3, r25	; 0x03
 60a:	8a 83       	std	Y+2, r24	; 0x02
 60c:	e0 e0       	ldi	r30, 0x00	; 0
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	12 96       	adiw	r26, 0x02	; 2
 612:	8d 91       	ld	r24, X+
 614:	9c 91       	ld	r25, X
 616:	13 97       	sbiw	r26, 0x03	; 3
 618:	00 97       	sbiw	r24, 0x00	; 0
 61a:	19 f0       	breq	.+6      	; 0x622 <free+0xd4>
 61c:	fd 01       	movw	r30, r26
 61e:	dc 01       	movw	r26, r24
 620:	f7 cf       	rjmp	.-18     	; 0x610 <free+0xc2>
 622:	8d 91       	ld	r24, X+
 624:	9c 91       	ld	r25, X
 626:	11 97       	sbiw	r26, 0x01	; 1
 628:	9d 01       	movw	r18, r26
 62a:	2e 5f       	subi	r18, 0xFE	; 254
 62c:	3f 4f       	sbci	r19, 0xFF	; 255
 62e:	82 0f       	add	r24, r18
 630:	93 1f       	adc	r25, r19
 632:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <__brkval>
 636:	30 91 0e 01 	lds	r19, 0x010E	; 0x80010e <__brkval+0x1>
 63a:	28 17       	cp	r18, r24
 63c:	39 07       	cpc	r19, r25
 63e:	69 f4       	brne	.+26     	; 0x65a <free+0x10c>
 640:	30 97       	sbiw	r30, 0x00	; 0
 642:	29 f4       	brne	.+10     	; 0x64e <free+0x100>
 644:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__flp+0x1>
 648:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__flp>
 64c:	02 c0       	rjmp	.+4      	; 0x652 <free+0x104>
 64e:	13 82       	std	Z+3, r1	; 0x03
 650:	12 82       	std	Z+2, r1	; 0x02
 652:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <__brkval+0x1>
 656:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <__brkval>
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	08 95       	ret

00000660 <_exit>:
 660:	f8 94       	cli

00000662 <__stop_program>:
 662:	ff cf       	rjmp	.-2      	; 0x662 <__stop_program>
